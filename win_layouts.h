// #define GRID_ROWS 6
// #define GRID_COLUMNS 7
// #define WIN_LAYOUTS_COUNT 100 // Change this
// #define A true
// #define B false

// const bool winLayouts[WIN_LAYOUTS_COUNT][GRID_ROWS][GRID_COLUMNS] = {
// 	{ /* -- HORIZONAL START -- */
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		A, A, A, A, B, B, B,
// 	},
// 	{
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, A, A, A, A, B, B,
// 	},
// 	{
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, A, A, A, A, B,
// 	},
// 	{
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, A, A, A, A,
// 	},
// 	{
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		A, A, A, A, B, B, B,
// 		B, B, B, B, B, B, B,
// 	},
// 	{
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, A, A, A, A, B, B,
// 		B, B, B, B, B, B, B,
// 	},
// 	{
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, A, A, A, A, B,
// 		B, B, B, B, B, B, B,
// 	},
// 	{
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, A, A, A, A,
// 		B, B, B, B, B, B, B,
// 	},
// 	{
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		A, A, A, A, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 	},
// 	{
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, A, A, A, A, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 	},
// 	{
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, A, A, A, A, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 	},
// 	{
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, A, A, A, A,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 	},
// 	{
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		A, A, A, A, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 	},
// 	{
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, A, A, A, A, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 	},
// 	{
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, A, A, A, A, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 	},
// 	{
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, A, A, A, A,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 	},
// 	{
// 		B, B, B, B, B, B, B,
// 		A, A, A, A, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 	},
// 	{
// 		B, B, B, B, B, B, B,
// 		B, A, A, A, A, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 	},
// 	{
// 		B, B, B, B, B, B, B,
// 		B, B, A, A, A, A, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 	},
// 	{
// 		B, B, B, B, B, B, B,
// 		B, B, B, A, A, A, A,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 	},
// 	{
// 		A, A, A, A, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 	},
// 	{
// 		B, A, A, A, A, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 	},
// 	{
// 		B, B, A, A, A, A, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 	},
// 	{
// 		B, B, B, A, A, A, A,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 	}, /* -- HORIZONAL DONE -- */
// 	{  /* -- VERTICAL START -- */
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		A, B, B, B, B, B, B,
// 		A, B, B, B, B, B, B,
// 		A, B, B, B, B, B, B,
// 		A, B, B, B, B, B, B,
// 	},
// 	{
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, A, A, A, A, B, B,
// 	},
// 	{
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, A, A, A, A, B,
// 	},
// 	{
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, A, A, A, A,
// 	},
// 	{
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		A, A, A, A, B, B, B,
// 	},
// 	{
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, A, A, A, A, B, B,
// 	},
// 	{
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, A, A, A, A, B,
// 	},
// 	{
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, B, B, B, B,
// 		B, B, B, A, A, A, A,
// 	},
// };